"core": {
	// WARNING, DO NOT EDIT UNLESS YOU KNOW WHAT YOU'RE DOING!
	// Many of these values require changes to field lengths on the database as well.

	// number of hours per token (roughly equates to double because of the lazy cheat I'm using)
	"token age": 24,

	// 0 == keep default assigned by Golang (recommended)
	"max os threads": 0,

	// cache control HTTP headers - not adviceable to have above 0 since this is a dynamic website
	"cache control" : 0,

	// how long to cache DB results for before refresh (cache is also updated dynamically along with the database so single node systems can get away with a higher cache - albeit at cost to more RAM being consumed)
	//60 * 5
	"db cache timeout": 0,

	// how long to cache user list. In seconds
	"user cache timeout": ${ = 60 * 15 },

	// how long to cache disk files when running in web server mode
	//"disk cache timeout": ${ = 60 * 60 * 24 },
	"disk cache timeout": 0,

	// max size of disk cache (bytes) - this is only an approximation, sizes will raise if requests are made before the webserver cache clean up executes
	//"disk cache limit": ${ = 1024 * 1024 * 256 },
	"disk cache limit": ${ = 1024 * 1024 * 256 },

	// how frequently to run the cache purger (every n seconds)
	"disk cache purger": 60,

	// cookie age for sessions (timeout)
	"session cookie age": ${ = 60 * 60 * 24 * 30 },

	// cookie age for platform preference (timeout)
	"platform preference cookie age": ${ = 60 * 60 * 24 * 30 },

	// i cheat by using a referrer cookie. Can be disabled though - if it is, fallback to ref HTTP header then SITE_HOME_URL if header doesn't exist
	"use referrer cookie": true,

	// how long to remember the referrer url (if enabled)
	"referrer cookie age": ${ = 60 * 60 * 24 },

	// database field lengths
	"username min characters":	3,
	"username max characters":	15,
	"password min characters":	6,
	"password max characters":	50,
	"email max characters":		255,
	"twitter max characters":	15,

	// what to crop the user agent to in the DB (this will still be logged via STDOUT)
	"user agent db crop": 200,

	//what to crop the source URL to in URL forums
	"source url crop": 50,

	// email a required field for sign up?
	"registration requires email": false,

	// twitter a required field for sign up?
	"registration requires twitter": false,

	// min characters per post (1 == suggested minimum)
	"post min characters": 1,

	// max characters per post
	"post max characters": 10000,

	// min characters for thread titles (encourages better titles)
	"thread title min characters": 5,

	// max characters for thread titles
	"thread title max characters": 100,

	// max characters for thread link URLs (link aggregate mode)
	"thread link url max characters": 255,

	// min characters per link description
	"thread link desc min characters": 5,

	// max characters per link description
	"thread link desc max characters": 500,

	// max characters per link content type
	"thread link content type max characters": 100,

	// max number of comments nested in one view (threaded)
	"max nested comments": 9,

	// real time updates via websockets
	"websockets desktop": true,
	"websockets mobile": true,

	#include "appearance.json"
}